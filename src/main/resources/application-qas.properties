# SETTING PORTAL
sm.portal.dev=false
sm.portal.nameId = 10465620540
sm.portal.nameDisplay = Usuario Prueba
sm.portal.email = usuario@dominio.pe
log.proceso.enabled = true


# CMIS NEO
cfg.portal.cmis.name = tasaRepositoryDev
cfg.portal.cmis.key = tasaRepositoryDev
destination.cmis = TASA_CMIS

#Folder ECM
cfg.folder.ecm = ArchivosSunat

#ClaveSol TASA
cfg.sunat.user = SILVEST2
cfg.sunat.pass = Admin1

#TASA
cfg.sunat.user.tasa=SILVEST2
cfg.sunat.pass.tasa=Admin1

#Neoagrum
cfg.sunat.user.neoagrum=NEOAGRU2
cfg.sunat.pass.neoagrum=Admin1


#URL PORTAL
##CAMBIAR AQUI!!!
#sm.portal.url = https://flpnwc-j49cebztcj.dispatcher.eu2.hana.ondemand.com/sites?siteId=3468528f-ff5a-4864-9f95-4f9874f1a34d&evictCache=true#Shell-home
cfg.portal.url = https://dev-tasa.cpp.cfapps.us10.hana.ondemand.com/site?siteId=94d16069-cf27-4ef4-a502-62577a3aaf6e#Shell-home

cfg.portal.url.public.oc = https://dev-tasa.cpp.cfapps.us10.hana.ondemand.com/site?siteId=94d16069-cf27-4ef4-a502-62577a3aaf6e#Shell-home

#WEBSERVICE PDF-XML COMPROBATE DE RETENCION
cfg.retencion.ws.url = http://qas.incloud.la:9998/services/S3getFilesCopeinca
tci.ws.retencion = http://cstireten.grupotasa.com.pe/WS_eCica/Retencion/ServicioRetencion.svc/soap11

#NOTIFICACIONES CONSULTAS URL
cfg.notificacion.consulta.url = comprobantes.electronicos@grupotasa.com.pe


# HANA (CLOUD) DB
# JPA / HIBERNATE
spring.jpa.properties.hibernate.format_sql=false
spring.datasource.driver-class-name=com.sap.db.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.HANAColumnStoreDialect
spring.datasource.url = jdbc:sap://b3be3a5b-abc-xyz-bae0-b56991fc8a4c.hana.prod-us10.hanacloud.ondemand.com:443/?user=TASA_DEV&currentSchema=TASA_DEV&password=Pa$$w0rd202101$$&encrypt=true&ValidateCertificate=true
spring.datasource.username = TASA_DEV
spring.datasource.password = Pa$$w0rd202101$$$
destination.email = SEND_MAIL_TASA

# PRIMARY DATA SOURCE
# HANA (CLOUD) DB
# (= create, update, none)
spring.jpa.hibernate.ddl-auto = none
spring.jta.enabled = true
spring.jpa.show-sql = true

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.idleTimeout=3000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=20000
spring.datasource.hikari.connectionTimeout=3000


#destinations
destination.rfc.profit=CFG_DEST_RFC_TASA